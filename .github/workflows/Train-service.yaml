name: Train Service Docker image test, build and push

on:
  push:
    branches:
      - main
    paths:
      - Train-Service/**
  pull_request:
    branches:
      - main
    paths:
      - Train-Service/**

jobs:
  # test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '18'

  #     - name: Install dependencies
  #       working-directory: ./Train-Service
  #       run: npm install

  #     - name: Run unit tests
  #       working-directory: ./Train-Service
  #       run: npm test
  build:
    runs-on: ubuntu-latest
    # needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./Train-Service
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/railway-booking-train-service:latest

      - name: Logout from Docker Hub
        run: docker logout
  
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Create target directory on the remote server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.MASTER_IP }} "mkdir -p /home/ubuntu/Manifests/Train-Service-Deployment/"

      - name: Copy manifest file to Kubernetes master node
        run: scp -o StrictHostKeyChecking=no -r ./Manifests/Train-service-Deployment/* ubuntu@${{ secrets.MASTER_IP }}:/home/ubuntu/Manifests/Train-service-Deployment/

      - name: Deploy to Kubernetes
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.MASTER_IP }} "
            kubectl apply -f /home/ubuntu/Manifests/Train-Service-Deployment/postgres-deployment.yaml &&
            kubectl apply -f /home/ubuntu/Manifests/Train-Service-Deployment/rabbitmq-deployment.yaml &&
            kubectl apply -f /home/ubuntu/Manifests/Train-Service-Deployment/redis-deployment.yaml &&
            kubectl apply -f /home/ubuntu/Manifests/Train-Service-Deployment/train-service-deployment.yaml &&
            kubectl apply -f /home/ubuntu/Manifests/Train-Service-Deployment/network-policy.yaml
          "

